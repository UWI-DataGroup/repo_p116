** HEADER -----------------------------------------------------
**  DO-FILE METADATA
    //  algorithm name          4_prep mort.do
    //  project:                BNR
    //  analysts:               Jacqueline CAMPBELL
    //  date first created      11-JAN-2023
    //  date last modified	  	18-JAN-2023
    //  algorithm task          Prep and format 2021 death data
    //  status                  Pending
    //  objective               To have multiple datasets with cleaned 2021 death data for:
	//							(1) matching/merging with incidence dataset
	//							(2) analysis/reporting mortality rates
    
    ** General algorithm set-up
    version 17.0
    clear all
    macro drop _all
    set more off

    ** Initialising the STATA log and allow automatic page scrolling
    capture {
            program drop _all
    	drop _all
    	log close
    	}

    ** Set working directories: this is for DATASET and LOGFILE import and export
    ** DATASETS to encrypted SharePoint folder
    local datapath "X:/The University of the West Indies/DataGroup - repo_data/data_p116"
    ** LOGFILES to unencrypted OneDrive folder (.gitignore set to IGNORE log files on PUSH to GitHub)
    local logpath X:/OneDrive - The University of the West Indies/repo_datagroup/repo_p116

    ** Close any open log file and open a new log file
    capture log close
    log using "`logpath'\4_prep mort.smcl", replace
** HEADER -----------------------------------------------------

**************************************
**     Prep 2021 death variables    **
** 	  for matching + merging with 	**
**		CVD incidence dataset 		**
**************************************
***************
** DATA IMPORT  
***************
** LOAD the cleaned national registry 2021 Stata death dataset that was imported into multi-year REDCap database
** This dataset was created during the cleaning of 2021 data in p141/v07
//use "X:\The University of the West Indies\DataGroup - repo_data\data_p141\version07\3-output\2021_deaths_cleaned_cvd" , clear
** Excel data generated using the REDCap report in multi-yr death db (BNRDeathData20082021) called 'CVD matching 2021 deaths'.

** JC 11jan2023: decided not to use the dataset prepared in p141 as this would not have the record_id from the multi-year database so will import and prep based on multi-year death db

** LOAD the national registry deaths 2021 excel dataset
import excel using "`datapath'\version03\1-input\BNRDeathData20082021-CVDMatching2021Death_DATA_2023-01-18_0815_excel.xlsx" , firstrow case(lower)

count //3148; 3149 (JC 18jan2023: added a late registration)


*******************
** DATA FORMATTING  
*******************
** PREPARE each variable according to the format and order in which they appear in DeathData REDCap database

************************
**  DEATH CERTIFICATE **
**        FORM        **
************************

** (1) record_id (auto-generated by REDCap)
label var record_id "DeathID"

** (2) redcap_event_name (auto-generated by REDCap)
gen event=.
replace event=1 if redcap_event_name=="death_data_collect_arm_1"
replace event=2 if redcap_event_name=="tracking_arm_2"

label var event "Redcap Event Name"
label define event_lab 1 "DC arm 1" 2 "TF arm 2", modify
label values event event_lab

** (3) dddoa: Y-M-D H:M, readonly
//gen double dddoa2 = clock(dddoa, "YMDhm")
//format dddoa2 %tcCCYY-NN-DD_HH:MM
//drop dddoa
//rename dddoa2 dddoa
format dddoa %tcCCYY-NN-DD_HH:MM
label var dddoa "ABS DateTime"

** (4) ddda
label var ddda "ABS DA"
label define ddda_lab 4 "KG" 13 "KWG" 14 "TH" 20 "NR" 25 "AH" 98 "intern", modify
label values ddda ddda_lab

** (5) odda
if odda==. tostring odda ,replace
replace odda="" if odda=="."
label var odda "ABS Other DA"

** (6) certtype: 1=MEDICAL 2=POST MORTEM 3=CORONER 99=ND, required
label var certtype "Certificate Type"
label define certtype_lab 1 "Medical" 2 "Post Mortem" 3 "Coroner" 99 "ND", modify
label values certtype certtype_lab

** (7) regnum: integer, if missing=9999
label var regnum "Registry Dept #"

** (8) district: 1=A 2=B 3=C 4=D 5=E 6=F
/* Districts are assigned based on death parish
	District A - anything below top rock christ church and st. michael 
	District B - anything above top rock christ church and st. george
	District C - st. philip and st. john
	District D - st. thomas
	District E - st. james, st. peter, st. lucy
	District F - st. joseph, st. andrew
*/
label var district "District"
label define district_lab 1 "A" 2 "B" 3 "C" 4 "D" 5 "E" 6 "F", modify
label values district district_lab

** (9) pname: Text, if missing=99
label var pname "Deceased's Name"
replace pname = rtrim(ltrim(itrim(pname))) //5 changes

** (10) address: Text, if missing=99
label var address "Deceased's Address"
replace address = rtrim(ltrim(itrim(address))) //20 changes

** (11) parish
label var parish "Deceased's Parish"
label define parish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values parish parish_lab

** (12) sex:	1=Male 2=Female 99=ND
label var sex "Sex"
label define sex_lab 1 "Male" 2 "Female" 99 "ND", modify
label values sex sex_lab

** (13) age: Integer - min=0, max=999
label var age "Age"

** (14) agetxt
label var agetxt "Age Qualifier"
label define agetxt_lab 1 "Minutes" 2 "Hours" 3 "Days" 4 "Weeks" 5 "Months" 6 "Years" 99 "ND", modify
label values agetxt agetxt_lab

** (15) nrnnd: 1=Yes 2=No
label define nrnnd_lab 1 "Yes" 2 "No", modify
label values nrnnd nrnnd_lab
label var nrnnd "Is National ID # documented?"

** (16) nrn: dob-####, partial missing=dob-9999, if missing=.
label var nrn "National ID #"
format nrn %15.0g

** (17) mstatus: 1=Single 2=Married 3=Separated/Divorced 4=Widowed/Widow/Widower 99=ND
label var mstatus "Marital Status"
label define mstatus_lab 1 "Single" 2 "Married" 3 "Separated/Divorced" 4 "Widowed/Widow/Widower" 99 "ND", modify
label values mstatus mstatus_lab

** (18) occu: Text, if missing=99
label var occu "Occupation"

** (19) durationnum: Integer - min=0, max=99, if missing=99
label var durationnum "Duration of Illness"

** (20) durationtxt
label var durationtxt "Duration Qualifier"
label define durationtxt_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values durationtxt durationtxt_lab

** (21) dod: Y-M-D
format dod %tdCCYY-NN-DD
label var dod "Date of Death"

** (22) dodyear (not included in single year Redcap db but done for multi-year Redcap db)
drop dodyear
gen int dodyear=year(dod)
label var dodyear "Year of Death"

** (23) cod1a: Text, if missing=99
label var cod1a "COD 1a"

** (24) onsetnumcod1a: Integer - min=0, max=99, if missing=99
label var onsetnumcod1a "Onset Death Interval-COD 1a"

** (25) onsettxtcod1a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1a "Onset Qualifier-COD 1a"
label define onsettxtcod1a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1a onsettxtcod1a_lab

** (26) cod1b: Text, if missing=99
label var cod1b "COD 1b"

** (27) onsetnumcod1b: Integer - min=0, max=99, if missing=99
label var onsetnumcod1b "Onset Death Interval-COD 1b"

** (28) onsettxtcod1b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1b "Onset Qualifier-COD 1b"
label define onsettxtcod1b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1b onsettxtcod1b_lab

** (29) cod1c: Text, if missing=99
label var cod1c "COD 1c"

** (30) onsetnumcod1c: Integer - min=0, max=99, if missing=99
label var onsetnumcod1c "Onset Death Interval-COD 1c"

** (31) onsettxtcod1c: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1c "Onset Qualifier-COD 1c"
label define onsettxtcod1c_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1c onsettxtcod1c_lab

** (32) cod1d: Text, if missing=99
label var cod1d "COD 1d"

** (33) onsetnumcod1d: Integer - min=0, max=99, if missing=99
label var onsetnumcod1d "Onset Death Interval-COD 1d"

** (34) onsettxtcod1d: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1d "Onset Qualifier-COD 1d"
label define onsettxtcod1d_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1d onsettxtcod1d_lab

** (35) cod2a: Text, if missing=99
label var cod2a "COD 2a"

** (36) onsetnumcod2a: Integer - min=0, max=99, if missing=99
label var onsetnumcod2a "Onset Death Interval-COD 2a"

** (37) onsettxtcod2a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2a "Onset Qualifier-COD 2a"
label define onsettxtcod2a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2a onsettxtcod2a_lab

** (38) cod2b: Text, if missing=99
label var cod2b "COD 2b"

** (39) onsetnumcod2b: Integer - min=0, max=99, if missing=99
label var onsetnumcod2b "Onset Death Interval-COD 2b"

** (40) onsettxtcod2b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2b "Onset Qualifier-COD 2b"
label define onsettxtcod2b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2b onsettxtcod2b_lab

** (41) pod: Text, if missing=99
label var pod "Place of Death"

** (42) deathparish
label var deathparish "Death Parish"
label define deathparish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values deathparish deathparish_lab

** (43) regdate: Y-M-D
label var regdate "Date of Registration"
format regdate %tdCCYY-NN-DD

** (44) certifier: Text, if missing=99
label var certifier "Name of Certifier"

** (45) certifieraddr: Text, if missing=99
label var certifieraddr "Address of Certifier"

** (46) namematch: readonly
label var namematch "Name Match"
label define namematch_lab 1 "names match but different person" 2 "no name match", modify
label values namematch namematch_lab

** (47) death_certificate_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename death_certificate_complete recstatdc
label var recstatdc "Record Status-DC Form"
label define recstatdc_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstatdc recstatdc_lab


*****************
**  Formatting **
**    Names    **
*****************
rename namematch nm

** Need to check for duplicate death registrations
** First split full name into first, middle and last names
** Also - code to split full name into 2 variables fname and lname - else can't merge! 
split pname, parse(", "" ") gen(name)
order record_id pname name*
sort record_id

** Use Stata browse to view results as changes are made
** (1) sort cases that contain only a first name and a last name
count if name7=="" & name6=="" & name5=="" & name4=="" & name3=="" & name2=="" //0
count if name6=="" & name5=="" & name4=="" & name3=="" & name2=="" //0
count if name5=="" & name4=="" & name3=="" & name2=="" //0
count if name5=="" & name4=="" & name3=="" //2292
count if name7!="" //3
count if name6!="" //4
count if name5!="" //6
count if name4!="" //81
count if name3!="" //856
count if name2!="" //3148
count if name1!="" //3148

** (2) sort name8 + name7 fields
replace name1=name1+" "+name5+" "+name6+" "+name7+" "+name8 if record_id==35038|record_id==35120
replace name2=name2+" "+name3 if record_id==35038|record_id==35120
replace name3=name4 if record_id==35038|record_id==35120
replace name1=name1+" "+name4+" "+name5+" "+name6+" "+name7 if record_id==37127
replace name4="" if record_id==35038|record_id==35120|record_id==37127
replace name5="" if record_id==35038|record_id==35120|record_id==37127
replace name6="" if record_id==35038|record_id==35120|record_id==37127
drop name7 name8

** (2) sort name6 field
replace name1=name1+" "+name3+" "+name4+" "+name5+" "+name6 if record_id==37158
replace name3=name2 if record_id==37158
replace name2="" if record_id==37158
replace name1=name1+" "+name2+" "+name3 if record_id==37199
replace name2=name4 if record_id==37199
replace name2=name2+" "+name3+"."+name4 if record_id==36382
replace name3=name5 if record_id==37199|record_id==36382
replace name4="" if record_id==37158|record_id==37199|record_id==36382
drop name5 name6

** (4) sort cases with name 'baby' or 'b/o' in name1 variable
count if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE")) //9
//gen tempvarn=1 if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE"))
count if name1=="BABY" //4
gen tempvarn=1 if name1=="BABY"
//list record_id pname name1 name2 name3 name4 name5 if tempvarn==1
//list record_id pname name6 name7 if tempvarn==1
//replace tempvarn=. if record_id==31995|record_id==32479
replace name1=name1+" "+name2+" "+name3 if tempvarn==1 //4 changes
replace name2="" if tempvarn==1 //4 changes
replace name3=name4 if tempvarn==1 //4 changes
replace name4="" if tempvarn==1 //4 changes
count if (regexm(name2,"BABY")|regexm(name2,"B/O")|regexm(name2,"MALE")|regexm(name2,"FEMALE")) //0
replace tempvarn=1 if (regexm(name2,"BABY")|regexm(name2,"B/O")|regexm(name2,"MALE")|regexm(name2,"FEMALE"))
replace tempvarn=. if tempvarn!=. //4 changes
count if (regexm(name3,"BABY")|regexm(name3,"B/O")|regexm(name3,"MALE")|regexm(name3,"FEMALE")) //0
count if (regexm(name4,"BABY")|regexm(name4,"B/O")|regexm(name4,"MALE")|regexm(name4,"FEMALE")) //0

** (5)
** Names containing 'ST' are being interpreted as 'ST'=name1/fname so correct
count if name1=="ST" | name1=="ST." //5
replace tempvarn=1 if name1=="ST" | name1=="ST." //5 changes
//list record_id pname name1 name2 name5 if tempvarn==2
replace name1 = subinstr(name1, ".", "",1) if tempvarn==1 //1 change
replace name1=name1+"."+""+name2 if tempvarn==1 //5 changes
replace name2="" if tempvarn==1 //5 changes
replace tempvarn=. if tempvarn!=. //5 changes
** Names containing 'ST' are being interpreted as 'ST'=name2/fname so correct
count if name2=="ST" | name2=="ST." //21
replace tempvarn=1 if name2=="ST" | name2=="ST." //21 changes
replace name3=name2+"."+name3 if tempvarn==1 & name4=="" //10 changes
replace name2="" if tempvarn==1 & name4=="" //10 changes
replace tempvarn=. if tempvarn==1 & name4=="" //10 changes
replace name2=name2+"."+name3 if tempvarn==1 //11 changes
replace name3=name4 if tempvarn==1 //11 changes
replace name4="" if tempvarn==1 //11 changes
replace tempvarn=. if tempvarn!=. //11 changes
** Names containing 'ST' are being interpreted as 'ST'=name3/fname so correct
count if name3=="ST" | name3=="ST." //2
replace tempvarn=1 if name3=="ST" | name3=="ST."
replace name3=name3+"."+""+name4 if tempvarn==1 //2 changes
replace name4="" if tempvarn==1 //2 changes
count if name4=="ST" | name4=="ST." //0
replace tempvarn=. if tempvarn!=. //2 changes

** (6) sort cases with name in name4 variable
count if name4!="" //58
//list record_id *name* if name4!=""
replace name2=name2+" "+name3 if name4!="" //58 changes
replace name3=name4 if name4!="" //58 changes
replace name4="" if name4!="" //58 changes
drop name4

** (7) sort cases with suffixes
count if (name3!="" & name3!="99") & length(name3)<4 //3 - 0 need correcting
//replace tempvarn=1 if (name3!="" & name3!="99") & length(name3)<4 //4 changes
//list record_id pname fname mname lname if (lname!="" & lname!="99") & length(lname)<3

** (8) sort cases with NO name in name3 variable
count if name3=="" //2292
//list record_id *name* if name3==""
replace tempvarn=1 if name3=="" //2292 changes
replace name3=name2 if tempvarn==1 //2292 changes
replace name2="" if tempvarn==1 //2292 changes
drop tempvarn

** Now rename, check and remove unnecessary variables
count if name1=="" //0
count if name2=="" //2312
count if name3=="" //0
rename name1 fname
rename name2 mname
rename name3 lname
count if fname=="" //0
count if lname=="" //0

** Convert names to lower case and strip possible leading/trailing blanks
replace fname = lower(rtrim(ltrim(itrim(fname)))) //3148 changes
replace mname = lower(rtrim(ltrim(itrim(mname)))) //836 changes
replace lname = lower(rtrim(ltrim(itrim(lname)))) //3148 changes

rename nm namematch

** Populate natregno (string) field with NRNs
gen double natregno = nrn
format natregno %15.0g
tostring natregno ,replace
order record_id pname fname mname lname nrn natregno age namematch

count if length(natregno)==9 //13
count if length(natregno)==8 //0
count if length(natregno)==7 //2
replace natregno="0" + natregno if length(natregno)==9 //13 changes
replace natregno="00" + natregno if length(natregno)==8 //0 changes
replace natregno="000" + natregno if length(natregno)==7 //2 changes
count if natregno=="." //87
replace natregno="" if natregno=="." //87 changes
count if natregno!="" & length(natregno)!=10 //0
count if nrn!=. & natregno=="" //0
count if nrn!=. & natregno=="" //0


******************
**  Identifying **
**   Potential  **
**   CVD deaths **
******************
** searching cod1a for these terms
replace cod1a="99" if cod1a=="999" //0 changes
replace cod1b="99" if cod1b=="999" //0 changes
replace cod1c="99" if cod1c=="999" //0 changes
replace cod1d="99" if cod1d=="999" //0 changes
replace cod2a="99" if cod2a=="999" //0 changes
replace cod2b="99" if cod2b=="999" //0 changes
count if cod1c!="99" //779
count if cod1d!="99" //236
count if cod2a!="99" //1456
count if cod2b!="99" //688
//ssc install unique
//ssc install distinct

** Create variable with combined CODs
gen coddeath=cod1a+" "+cod1b+" "+cod1c+" "+cod1d+" "+cod2a+" "+cod2b
replace coddeath=subinstr(coddeath,"99 ","",.) //2997 changes
replace coddeath=subinstr(coddeath," 99","",.) //2447 changes

************
** STROKE **
************
** Now generate a new variable which will select out all the potential strokes
gen stroke=.
label define stroke_lab 1 "stroke" 2 "not stroke" , modify
label values stroke stroke_lab
label var stroke "stroke COD"
label var record_id "Event identifier for registry deaths"

** Identify stroke deaths using variable called 'stroke' (also include misspellings)
replace stroke=1 if regexm(coddeath, "STROKE") &  stroke==.
replace stroke=1 if regexm(coddeath, "SRTROKE") &  stroke==.
replace stroke=1 if regexm(coddeath, "CVA") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBROVASCULAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBRO VASCULAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBRO-VASCULAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBRAL VASCULAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "CAREBROVASCULAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBBROVASCULAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBRALVASCULAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBROVASCUALAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "CERBROVASCULAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBROVASCUALR") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBROVASCUKAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBRAL") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBREL") &  stroke==.
replace stroke=1 if regexm(coddeath, "BRAINSTEM") &  stroke==.
replace stroke=1 if regexm(coddeath, "BRAIN STEM") &  stroke==.
replace stroke=1 if regexm(coddeath, "BRAIN HEM") &  stroke==.
replace stroke=1 if regexm(coddeath, "BRAIN HAEM") &  stroke==.
replace stroke=1 if regexm(coddeath, "INTRACEREBRAL") &  stroke==.
replace stroke=1 if regexm(coddeath, "INTRA-CEREBRAL") &  stroke==.
replace stroke=1 if regexm(coddeath, "INTRACEREBELLAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "INTRACEREBRAL") &  stroke==.
replace stroke=1 if regexm(coddeath, "INTRA CEREBRAL") &  stroke==.
replace stroke=1 if regexm(coddeath, "CEREBELLAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "SUBARACHNOID") &  stroke==.
replace stroke=1 if regexm(coddeath, "INTRACRANIAL") &  stroke==.
replace stroke=1 if regexm(coddeath, "INTRA CRANIAL") &  stroke==.
replace stroke=1 if regexm(coddeath, "INTRAPARENCHYMAL") &  stroke==.
replace stroke=1 if regexm(coddeath, "INTRA PARENCHYMAL") &  stroke==.
replace stroke=1 if regexm(coddeath, "LACUNAR") &  stroke==.
replace stroke=1 if regexm(coddeath, "LACUNOR") &  stroke==.
replace stroke=1 if regexm(coddeath, "THAMLAMIC") &  stroke==.
replace stroke=1 if regexm(coddeath, "ISCHEMI") &  stroke==.
replace stroke=1 if regexm(coddeath, "ISCHAEMI") &  stroke==.
				  
** JC 12jan2023: NS confirmed on 06dec2022 to remove these terms below which are from the 2020 cleaning dofile "3_prep_stroke_dreg"
//replace stroke=1 if regexm(coddeath, "CARDIOVASCULAR ACCIDENT") &  stroke==.
//replace stroke=1 if regexm(coddeath, "CARDIO VASCULAR ACCIDENT") &  stroke==.


***********
** HEART **
***********

** Now generate a new variable which will select out all the potential strokes
gen heart=.
label define heart_lab 1 "heart" 2 "not heart" , modify
label values heart heart_lab
label var heart "heart COD"
//label var record_id "Event identifier for registry deaths"

** Identify heart deaths using variable called 'heart' (also include misspellings)
replace heart=1 if regexm(coddeath, "MYOCARD") &  heart==.
replace heart=1 if regexm(coddeath, "MYOCAD") &  heart==.
replace heart=1 if regexm(coddeath, "HEART ATT") &  heart==.

** JC 12jan2023: review cardiac arrests when checking any heart CODs that were not assigned 
** (see Angie's note to Ashley below re cardiac arrest from 2020 cleaning dofile "3_prep_heart_dreg")
/*
** AR to AH: note - drop all who are CA plus CCF or HF only
** AR to AH: cardiac arrests really should only be included - like SCD - in a setting of
** cardiac ischaemia, as someone could die drowning and have a "cardiac arrest" which literally just means stopped heart.
*/

** Reviewing all CODs are correctly assigned

********************
** STROKE + HEART **
********************
** Strip possible leading/trailing blanks in cod1a
replace coddeath = rtrim(ltrim(itrim(coddeath))) //0 changes

tab stroke heart, m //2531 missing

sort coddeath record_id
order record_id coddeath natregno

drop dodyear
gen dodyear=year(dod)
tab dodyear stroke,m //2748 missing
tab dodyear heart,m //2898 missing


** Check that all cancer CODs are eligible
sort coddeath record_id
order record_id stroke heart coddeath natregno


** Review + correct all deaths assigned as heart or stroke if incorrectly assigned
count if stroke==1|heart==1 //651 - reviewed all but awaiting queries review meeting with CVD team to confirm some of the below

replace stroke=2 if record_id==36187|record_id==36310|record_id==34147|record_id==36589|record_id==35274 ///
					|record_id==37354|record_id==34495|record_id==34625|record_id==36609|record_id==34743 ///
					|record_id==35603|record_id==35957|record_id==35464|record_id==34183|record_id==35876 ///
					|record_id==34520|record_id==34301|record_id==34171|record_id==35912|record_id==36216 ///
					|record_id==35020|record_id==35243|record_id==35048|record_id==35856|record_id==35444 ///
					|record_id==36278|record_id==36074|record_id==36476|record_id==35190|record_id==34539 ///
					|record_id==37278|record_id==35843|record_id==34779|record_id==35225|record_id==37153 ///
					|record_id==36859|record_id==35461|record_id==35799|record_id==35882|record_id==36714 ///
					|record_id==34252|record_id==37174|record_id==37340|record_id==36799|record_id==36944 ///
					|record_id==36738|record_id==36385|record_id==36830|record_id==34881|record_id==37323 ///
					|record_id==37301|record_id==34986|record_id==37296|record_id==37006|record_id==36047 ///
					|record_id==34887|record_id==35322|record_id==36398|record_id==35015|record_id==34273 ///
					|record_id==37166|record_id==37127|record_id==34339|record_id==36333|record_id==37025 ///
					|record_id==36640|record_id==35372|record_id==35832|record_id==37193|record_id==34435 ///
					|record_id==37288|record_id==36797|record_id==35877|record_id==36102|record_id==37008 ///
					|record_id==34631|record_id==34818|record_id==35266|record_id==34545|record_id==35042 ///
					|record_id==35738|record_id==37295|record_id==35654|record_id==35592|record_id==34399 ///
					|record_id==36535|record_id==35505|record_id==35260|record_id==36200|record_id==35071 ///
					|record_id==35050|record_id==36718|record_id==36869|record_id==36068|record_id==35929 ///
					|record_id==34754|record_id==34443|record_id==36331|record_id==34911|record_id==37347 ///
					|record_id==36069|record_id==35421|record_id==35784|record_id==35317|record_id==36477 ///
					|record_id==37045|record_id==36272|record_id==35713|record_id==36636|record_id==34196 ///
					|record_id==35247|record_id==34591|record_id==36663|record_id==35353|record_id==36118 ///
					|record_id==36255|record_id==35486|record_id==35037|record_id==34555|record_id==35736 ///
					|record_id==36390|record_id==35427|record_id==35380|record_id==34472|record_id==37239 ///
					|record_id==34360|record_id==34623|record_id==35781|record_id==37263|record_id==36804 ///
					|record_id==35417|record_id==34624|record_id==36939|record_id==34294|record_id==36446 ///
					|record_id==36658 //|record_id==|record_id==|record_id==|record_id== ///
					//|record_id==|record_id==|record_id==|record_id==|record_id== ///
					//|record_id==|record_id==|record_id==|record_id==|record_id== ///
					//|record_id==|record_id==|record_id==|record_id==|record_id== ///
** 136 changes

replace heart=2 if record_id==36310|record_id==34275|record_id==36563|record_id==34273|record_id==35255 ///
					|record_id==34226|record_id==34471|record_id==37070|record_id==34317|record_id==35825 ///
					|record_id==35479 //|record_id==|record_id==|record_id==|record_id== ///
					//|record_id==|record_id==|record_id==|record_id==|record_id== ///
					//|record_id==|record_id==|record_id==|record_id==|record_id== ///
					//|record_id==|record_id==|record_id==|record_id==|record_id== ///
					//|record_id==|record_id==|record_id==|record_id==|record_id== ///
					//|record_id==|record_id==|record_id==|record_id==|record_id== ///
					//|record_id==|record_id==|record_id==|record_id==|record_id== ///
** 11 changes

replace stroke=2 if heart==1 & stroke==. //assigning deaths that have already been reviewed above - 200 changes
replace heart=2 if stroke==1 & heart==. //assigning deaths that have already been reviewed above - 294 changes

** Review + correct all cardiac arrests wherein heart variable is blank 
count if regexm(coddeath, "ARREST") &  heart==. //175

stop
** Review + correct all unassigned deaths to ensure there are no unassigned stroke or heart CODs
** (exclude cardiac arrest as will review these separately)
count if !(strmatch(strupper(coddeath), "*ARREST*")) & stroke==. & heart==. //2330; 2331


stop

replace stroke=2 if stroke==.
replace heart=2 if heart==.


** Spelling corrections from the above list reviews; Also emailed to KG on 11jul2022 to update in multi-year REDCap deathdb
replace coddeath=subinstr(coddeath,"CARE","CERE",.) if record_id==34334
replace coddeath=subinstr(coddeath,"CARDIAC F","CARDIAC FAILURE",.) if record_id==36714
replace coddeath=subinstr(coddeath,"HEMDOMA","HEMATOMA",.) if record_id==37006
replace coddeath=subinstr(coddeath,"INFARCION","INFARCTION",.) if record_id==34380
replace natregno=subinstr(natregno,"9","8",.) if record_id==34294
replace coddeath=subinstr(coddeath,"","",.) if record_id==
replace coddeath=subinstr(coddeath,"","",.) if record_id==
replace coddeath=subinstr(coddeath,"","",.) if record_id==
replace coddeath=subinstr(coddeath,"","",.) if record_id==
replace coddeath=subinstr(coddeath,"","",.) if record_id==
replace coddeath=subinstr(coddeath,"","",.) if record_id==
replace coddeath=subinstr(coddeath,"","",.) if record_id==
replace coddeath=subinstr(coddeath,"","",.) if record_id==
replace coddeath=subinstr(coddeath,"","",.) if record_id==


** Create cod categorical variable for stroke
gen codstroke=.
label define codstroke_lab 1 "Dead of stroke" 2 "Dead of other cause" 3 "Not known" 4 "NA", modify
label values codstroke codstroke_lab
label var codstroke "COD categories: Stroke"
replace codstroke=1 if stroke==1 // changes
replace codstroke=2 if stroke==2 // changes
replace codstroke=3 if coddeath=="99"|(regexm(coddeath,"INDETERMINATE")|regexm(coddeath,"UNDETERMINED")|regexm(coddeath,"UNKNOWN CAUSE")|regexm(coddeath,"NO ANATOMICAL CAUSE")) //28 changes
//list record_id coddeath if cod==3


** Create cod categorical variable for heart
gen codheart=.
label define codheart_lab 1 "Dead of AMI" 2 "Dead of other cause" 3 "Not known" 4 "NA", modify
label values codheart codheart_lab
label var codheart "COD categories: Heart"
replace codheart=1 if heart==1 // changes
replace codheart=2 if heart==2 // changes
replace codheart=3 if coddeath=="99"|(regexm(coddeath,"INDETERMINATE")|regexm(coddeath,"UNDETERMINED")|regexm(coddeath,"UNKNOWN CAUSE")|regexm(coddeath,"NO ANATOMICAL CAUSE")) //28 changes
//list record_id coddeath if cod==3




** Spotting some duplicates so re-check for duplicates (since 2019 Pt.1 death cleaning was done at different time to 2019 Pt.2 these duplicates were missed)
** Delete records in multi-year REDCap database
sort regnum district
quietly by regnum district:  gen dupreg = cond(_N==1,0,_n)
sort regnum district
count if event==1 & dupreg>0  //517 - same reg #s but different pts
sort regnum pname record_id
//list record_id dddoa ddda odda pname regnum district nrn if event==1 & dupreg>0, sepby(regnum)
//list record_id dddoa ddda odda pname regnum district nrn if event==1 & dupreg>0 & inrange(record_id, 26000, 28000)
//list record_id dddoa ddda odda pname regnum district nrn if event==1 & dupreg>0 & inrange(record_id, 28001, 30000)
drop dupreg


sort pname
quietly by pname:  gen dup = cond(_N==1,0,_n)
sort pname
count if event==1 & dup>0  //28 - all different pts with same name
sort pname record_id
//list record_id dddoa ddda odda pname regnum district nrn namematch if event==1 & dup>0, sepby(pname)
/*
replace namematch=1 if record_id==|record_id==|record_id==|record_id==|record_id== ///
					   |record_id==|record_id==|record_id==|record_id==|record_id== ///
					   |record_id==|record_id==|record_id==|record_id==|record_id== ///
					   |record_id==|record_id==|record_id==|record_id== // changes
drop if record_id==|record_id== // deleted
*/
//drop if event==1 & dup>0 & namematch==. // deleted
drop dup

** Create DOB variable to correspond with 2021 incidence dataset
order record_id natregno age
count if natregno==""|natregno=="." //87
gen tempvarn=6 if natregno==""|natregno=="."
gen yr = substr(natregno,1,1) if tempvarn!=6
gen yr1=. if tempvarn!=6
replace yr1 = 20 if yr=="0" & tempvarn!=6
replace yr1 = 19 if yr!="0" & tempvarn!=6
replace yr1 = 99 if natregno=="99" & tempvarn!=6
order record_id natregno nrn age yr yr1
replace yr1=20 if yr1==19 & age<21 //9 changes

tostring yr1 ,replace
gen nrn2=substr(natregno, 1,6)
replace nrn2=yr1+nrn2 if tempvarn!=6

gen natregno2 = substr(nrn2, 1,4) + "/" + substr(nrn2, 5,2) + "/" + substr(nrn2, 7,2) if tempvarn!=6
order record_id natregno nrn age yr yr1 natregno2 nrn2
gen dob=date(natregno2, "YMD")
format dob %dD_m_CY
order record_id natregno dob nrn age yr yr1 natregno2 nrn2
drop yr yr1 natregno2 nrn2


** Convert names to lower case and strip possible leading/trailing blanks
replace fname = lower(rtrim(ltrim(itrim(fname)))) //2493 changes
replace mname = lower(rtrim(ltrim(itrim(mname)))) //713 changes
replace lname = lower(rtrim(ltrim(itrim(lname)))) //2493 changes

rename deathid record_id
order record_id pname fname mname lname namematch

*************************
** Checking & Removing ** 
**   Duplicate Death   **
**    Registrations    **
*************************
/* 
NB: These deaths were cleaned previously for importing into DeathData REDCapdb 
so the field namematch can be used as a guide for checking duplicates
	1=names match but different person
	2=no name match
*/
//label define namematch_lab 1 "deaths only namematch,diff.pt" 2 "no namematch" 3 "cr5 & death namematch,diff.pt" 4 "slc=2/9,not in deathdata", modify
//label values namematch namematch_lab
sort lname fname record_id
quietly by lname fname : gen dupname = cond(_N==1,0,_n)
sort lname fname record_id
count if dupname>0 //64
/* 
Check below list (or Stata Browse window) for cases where namematch=no match but 
there is a pt with same name then:
 (1) check if same pt and remove duplicate pt;
 (2) check if same name but different pt and
	 update namematch variable to reflect this, i.e.
	 namematch=1
*/
//list record_id namematch fname lname nrn dod sex age if dupname>0
sort lname fname record_id
order record_id pname namematch nrn dod coddeath

replace namematch=1 if dupname>0 & namematch!=1 //28 changes

//replace namematch=2 if record_id==
/*
replace namematch=1 if record_id==|record_id==|record_id==|record_id==|record_id==|record_id== ///
					  |record_id==|record_id==|record_id==|record_id==|record_id==|record_id== ///
					  |record_id==|record_id==|record_id==|record_id==|record_id==|record_id== ///
					  |record_id==|record_id==|record_id==|record_id==|record_id==|record_id== ///
					  |record_id==|record_id==|record_id==|record_id==|record_id==|record_id== ///
					  |record_id==|record_id==|record_id==|record_id==|record_id==|record_id== ///
					  |record_id==|record_id==|record_id==|record_id==|record_id==|record_id== ///
					  |record_id==
//2 changes
*/

preserve
drop if nrn==.
sort nrn 
quietly by nrn : gen dupnrn = cond(_N==1,0,_n)
sort nrn record_id lname fname
count if dupnrn>0 //0
list record_id namematch fname lname nrn dod sex age if dupnrn>0
restore

//drop if record_id== // deleted

** Final check for duplicates by name and dod 
sort lname fname dod
quietly by lname fname dod: gen dupdod = cond(_N==1,0,_n)
sort lname fname dod record_id
count if dupdod>0 //2 - no match; different pt
list record_id namematch fname lname nrn dod sex age if dupdod>0
count if dupdod>0 & namematch!=1 //0
drop dupname dupdod

count //3142



********************
**   Formatting   **
** Place of Death **
********************
rename pod placeofdeath
gen pod=.

label define pod_lab 1 "QEH" 2 "At Home" 3 "Geriatric Hospital" ///
					 4 "Con/Nursing Home" 5 "Other Homes" 6 "District Hospital" ///
					 7 "Psychiatric Hospital" 8 "Bayview Hospital" ///
					 9 "Sandy Crest/FMH/Sparman/Clinic" 10 "Bridgetown Port" ///
					 11 "Other/Hotel" 12 "Isolation facility" 99 "ND", modify
label values pod pod_lab
label var pod "Place of Death from National Register"

replace pod=1 if regexm(placeofdeath, "ELIZABETH HOSP") & pod==. //0 changes
replace pod=1 if regexm(placeofdeath, "QUEEN ELZ") & pod==. //0 changes
replace pod=1 if regexm(placeofdeath, "QEH") & pod==. //1439 changes
replace pod=1 if regexm(placeofdeath, "Q.E.H") & pod==. //0 changes
replace pod=3 if regexm(placeofdeath, "GERIATRIC") & pod==. //80 changes
replace pod=3 if regexm(placeofdeath, "GERIACTIRC") & pod==. //0 changes
replace pod=3 if regexm(placeofdeath, "GERIACTRIC") & pod==. //0 chagnes
replace pod=5 if regexm(placeofdeath, "CHILDRENS HOME") & pod==. //0 chagnes
replace pod=4 if regexm(placeofdeath, "HOME") & pod==. //118 changes
replace pod=4 if regexm(placeofdeath, "ELDERLY") & pod==. //3 changes
replace pod=4 if regexm(placeofdeath, "SERENITY MANOR") & pod==. //0 changes
replace pod=4 if regexm(placeofdeath, "ADULT CARE") & pod==. //0 changes
replace pod=4 if regexm(placeofdeath, "AGE ASSIST") & pod==. //0 changes
replace pod=4 if regexm(placeofdeath, "SENIOR") & pod==. //0 changes
replace pod=4 if regexm(placeofdeath, "RETREAT") & pod==. //16 changes
replace pod=4 if regexm(placeofdeath, "RETIREMENT") & pod==. //0 changes
replace pod=4 if regexm(placeofdeath, "NURSING") & pod==. //1 change
replace pod=5 if regexm(placeofdeath, "PRISON") & pod==. //0 changes
replace pod=5 if regexm(placeofdeath, "MINISTRIES") & pod==. //0 changes
replace pod=5 if regexm(placeofdeath, "HIGHWAY") & pod==. //3 changes - FOR THESE CHECK COD TO DIFFERENTIATE BETWEEN ROAD ACCIDENT AND AT HOME DEATH
replace pod=5 if regexm(placeofdeath, "ROUNDABOUT") & pod==. //0 changes - FOR THESE CHECK COD TO DIFFERENTIATE BETWEEN ROAD ACCIDENT AND AT HOME DEATH
replace pod=5 if regexm(placeofdeath, "JUNCTION") & pod==. //1 change - FOR THESE CHECK COD TO DIFFERENTIATE BETWEEN ROAD ACCIDENT AND AT HOME DEATH
replace pod=6 if regexm(placeofdeath, "STRICT HOSP") & pod==. //19 changes
replace pod=6 if regexm(placeofdeath, "GORDON CUMM") & pod==. //2 changes
replace pod=7 if regexm(placeofdeath, "PSYCHIATRIC HOSP") & pod==. //1 change
replace pod=7 if regexm(placeofdeath, "PSYCIATRIC HOSP") & pod==. //0 changes
replace pod=7 if regexm(placeofdeath, "PSYCHIATRIC") & pod==. //14 changes
replace pod=8 if regexm(placeofdeath, "BAYVIEW") & pod==. //15 changes
replace pod=8 if regexm(placeofdeath, "BAY VIEW HOSP") & pod==. //0 changes
replace pod=9 if regexm(placeofdeath, "SANDY CREST") & pod==. //7 changes
replace pod=9 if regexm(placeofdeath, "FMH CLINIC") & pod==. //0 changes
replace pod=9 if regexm(placeofdeath, "FMH EMERGENCY") & pod==. //0 changes
replace pod=9 if regexm(placeofdeath, "SPARMAN CLINIC") & pod==. //0 changes
replace pod=9 if regexm(placeofdeath, "CLINIC") & pod==. //4 changes
replace pod=9 if regexm(placeofdeath, "POLYCLINIC") & pod==. //0 changes
replace pod=10 if regexm(placeofdeath, "BRIDGETOWN PORT") & pod==. //0 changes
replace pod=11 if regexm(placeofdeath, "HOTEL") & pod==. //3 changes
replace pod=99 if placeofdeath=="" & pod==. //0 changes
replace pod=99 if placeofdeath=="99" //20 changes

order record_id address placeofdeath parish deathparish coddeath
count if pod==. & parish!=deathparish & (regexm(coddeath, "CORONA")|regexm(coddeath, "COVID")) //217
replace pod=12 if pod==. & parish!=deathparish & (regexm(coddeath, "CORONA")|regexm(coddeath, "COVID")) //217 changes
count if pod==. & parish!=deathparish //88 - check COD to determine if road accident or at home death
//list record_id address parish placeofdeath deathparish if pod==. & parish!=deathparish
count if pod==. //1179 - check address against placeofdeath in Stata Browse window
//list record_id placeofdeath if pod==.
replace pod=2 if pod==. & address==placeofdeath //623 changes
replace pod=2 if pod==. & parish==deathparish //473 changes
replace pod=11 if pod==. & parish!=deathparish & address!=placeofdeath //83 changes

//drop placeofdeath
tab pod ,m //none unassigned

order record_id pname fname mname lname address parish age dod

count if natregno=="" & nrn!=. //0
//gen double nrn2=nrn if record_id==28513
//tostring nrn2 ,replace
//replace nrn2=subinstr(nrn2,"3","3-",.) if record_id==28513
//replace natregno=nrn2 if record_id==28513
//drop nrn2

count if natregno=="" //87
count if natregno=="" & age!=0 //87
count if natregno=="" & age!=0 & pod!=11 & !(strmatch(strupper(address), "*BRIDGETOWN PORT*")) & !(strmatch(strupper(address), "*BRIDGETOWN SEA PORT*")) & !(strmatch(strupper(address), "*HOTEL*")) & !(strmatch(strupper(address), "*BARBADOS PORT*")) & !(strmatch(strupper(address), "*AIRPORT*")) & !(strmatch(strupper(pname), "*BABY*")) //65 - checked against 2021 electoral list + updated NRN in REDCapdb
count if pod!=11 & (regexm(address,"BRIDGETOWN PORT")|regexm(address,"BARBADOS PORT")|regexm(address,"AIRPORT")|regexm(address,"HOTEL")) //9
replace pod=11 if pod==2 & (regexm(address,"BRIDGETOWN PORT")|regexm(address,"BARBADOS PORT")|regexm(address,"AIRPORT")|regexm(address,"HOTEL")) //3 changes
count if age==. //0


** Add missing NRNs flagged above with list of NRNs manually created using electoral list (this ensures dofile remains de-identified)
/*
preserve
clear
import excel using "`datapath'\version09\2-working\MissingNRNs_mort_20220614.xlsx" , firstrow case(lower)
format elec_nrn %15.0g
replace elec_natregno=subinstr(elec_natregno,"-","",.)
save "`datapath'\version09\2-working\electoral_missingnrn" ,replace
restore
merge 1:1 record_id using "`datapath'\version09\2-working\electoral_missingnrn" ,force
/*
    Result                      Number of obs
    -----------------------------------------
    Not matched                         5,337
        from master                     5,337  (_merge==1)
        from using                          0  (_merge==2)

    Matched                                50  (_merge==3)
    -----------------------------------------
*/
replace nrn=elec_nrn if _merge==3 //3 changes
replace natregno=elec_natregno if _merge==3 //3 changes
drop elec_* _merge
erase "`datapath'\version09\2-working\electoral_missingnrn.dta"
*/

** Check dob** Creating dob variable as none in national death data
** perform data cleaning on the age variable
order record_id natregno age
count if natregno==""|natregno=="." //87
gen tempvarn=6 if natregno==""|natregno=="."
gen yr = substr(natregno,1,1) if tempvarn!=6
gen yr1=. if tempvarn!=6
replace yr1 = 20 if yr=="0"
replace yr1 = 19 if yr!="0"
replace yr1 = 99 if natregno=="99"
order record_id natregno nrn age agetxt yr yr1
** Check age and yr1 in Stata browse
//list record_id natregno nrn age agetxt yr1 if yr1==20
count if yr1==19 & age<21 //25
replace yr1=20 if yr1==19 & age<21 //25 changes
** Initially need to run this code separately from entire dofile to determine which nrnyears should be '19' instead of '20' depending on age, e.g. for age 107 nrnyear=19
//replace yr1 = 19 if record_id==|record_id==

gen nrndob = substr(natregno,1,6) 
destring nrndob, replace
format nrndob %06.0f
nsplit nrndob, digits(2 2 2) gen(dyear month day)
format dyear month day %02.0f
tostring yr1, replace
gen year2 = string(dyear,"%02.0f")
gen nrnyr = substr(yr1,1,2) + substr(year2,1,2)
destring nrnyr, replace
sort nrndob
gen nrn1=mdy(month, day, nrnyr)
format nrn1 %dD_m_CY
rename nrn1 dobcheck
gen age2 = (dod - dobcheck)/365.25
gen ageyrs=int(age2)
count if tempvarn!=6 & age!=ageyrs //7
sort record_id
list record_id fname lname address age agetxt ageyrs nrn natregno dob dobcheck dod yr1 if tempvarn!=6 & age!=ageyrs, string(15) //check against electoral list
count if dobcheck!=. & dob==. //0
replace dob=dobcheck if dobcheck!=. & dob==. //0 changes
//replace nrn=. if record_id==34112 - KG checked 24jun2022 and confirmed NRN and age are correct since pt's age = 18 months
//replace natregno="" if record_id==34112
replace age=ageyrs if tempvarn!=6 & age!=ageyrs & agetxt==6 & ageyrs<100 //3 changes
drop day month dyear nrnyr yr yr1 year2 nrndob age2 ageyrs tempvarn dobcheck

** Check age
gen age2 = (dod - dob)/365.25
gen checkage2=int(age2)
drop age2
count if dob!=. & dod!=. & age!=checkage2 //4
list record_id fname lname dod dob age agetxt checkage2 if dob!=. & dod!=. & age!=checkage2 //all correct
//replace age=checkage2 if dob!=. & dod!=. & age!=checkage2 //0 changes
drop checkage2

** Check no missing dxyr so this can be used in analysis
tab dodyear ,m //3142 - none missing

count if dodyear!=year(dod) //0
//list pid record_id dod dodyear if dodyear!=year(dod)
replace dodyear=year(dod) if dodyear!=year(dod) //0 changes


** Remove, relabel variables for matching with incidence dataset
drop tempvarn
//rename * dd_*
rename record_id deathid

** JC 15aug2022: Create an identifier for the death dataset in prep for the death-incidence matching/merging process
gen deathds=1

order record_id dd_pname dd_fname dd_mname dd_lname dd_regnum dd_nrn dd_sex dd_age dd_dod dd_cancer dd_cod1a dd_address dd_parish dd_pod dd_coddeath dd_namematch dd_dddoa dd_ddda dd_odda dd_certtype dd_district dd_agetxt dd_nrnnd dd_mstatus dd_occu dd_durationnum dd_durationtxt dd_onsetnumcod1a dd_onsettxtcod1a dd_cod1b dd_onsetnumcod1b dd_onsettxtcod1b dd_cod1c dd_onsetnumcod1c dd_onsettxtcod1c dd_cod1d dd_onsetnumcod1d dd_onsettxtcod1d dd_cod2a dd_onsetnumcod2a dd_onsettxtcod2a dd_cod2b dd_onsetnumcod2b dd_onsettxtcod2b dd_deathparish dd_regdate dd_certifier dd_certifieraddr dd_cleaned dd_duprec dd_elecmatch dd_cod dd_natregno dd_dob dd_dodyear


** Create dataset for matching with CVD incidence dataset
label data "BNR MORTALITY data 2021"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version03\3-output\2021_prep mort_ALL" ,replace
note: TS This dataset can be used for merging 2021 deaths with 2021 CVD incidence data
note: TS This dataset includes all 2021 CODs

/*
label data "BNR MORTALITY data 2021"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version03\2-working\2021_deaths_for_matching" ,replace
note: TS This dataset can be used for merging 2021 deaths with 2021 CVD incidence data
*/

drop dup_id

order record_id did fname lname age age5 age_10 sex dob nrn parish dod dodyear cancer siteiarc siteiarchaem pod coddeath

label data "BNR MORTALITY data 2021: Identifiable Dataset"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version03\3-output\2021_prep mort_identifiable_ALL" ,replace
note: TS This dataset can be used for merging 2021 deaths with 2021 CVD incidence data
note: TS This dataset includes all 2021 CODs

preserve
** Create corrected dataset with reportable cases but de-identified data (STROKE)
drop fname lname natregno nrn pname mname dob parish regnum address pod placeofdeath certifier certifieraddr
drop if stroke!=1
** Save this death dataset with de-identified data
label data "BNR MORTALITY data 2021: De-identified Dataset (STROKE)"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version03\3-output\2021_prep mort_deidentified_stroke" ,replace
note: TS This dataset is used for analysis of age-standardized mortality rates for stroke
note: TS This dataset excludes CODs that are not eligible for stroke
restore

preserve
** Create corrected dataset with reportable cases but de-identified data (HEART)
drop fname lname natregno nrn pname mname dob parish regnum address pod placeofdeath certifier certifieraddr
drop if heart!=1
** Save this death dataset with de-identified data
label data "BNR MORTALITY data 2021: De-identified Dataset (HEART)"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version03\3-output\2021_prep mort_deidentified_heart" ,replace
note: TS This dataset is used for analysis of age-standardized mortality rates for heart
note: TS This dataset excludes CODs that are not eligible for heart
restore